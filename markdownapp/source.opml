<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Thu, 06 Jan 2022 14:15:00 GMT -->
<opml version="2.0">
	<head>
		<title>nodeEditor: docServerToMarkdown</title>
		<dateCreated>Wed, 05 Jan 2022 14:48:50 GMT</dateCreated>
		<dateModified>Thu, 06 Jan 2022 14:15:00 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 2, 3, 10, 27, 31, 36, 38, 39, 40, 48, 58, 65, 67, 69, 70, 72, 73, 74, 83</expansionState>
		<vertScrollState>40</vertScrollState>
		<windowTop>88</windowTop>
		<windowLeft>899</windowLeft>
		<windowBottom>1086</windowBottom>
		<windowRight>1881</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/docservertomarkdown/" created="Sun, 29 Aug 2021 15:07:43 GMT">
			<outline text="package.json">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;docservertomarkdown&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.2&quot;,"/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;main&quot;: &quot;docservertomarkdown.js&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;request&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davegithub&quot;: &quot;*&quot;,"/>
						<outline text="&quot;opml&quot;: &quot;*&quot;" created="Fri, 19 Nov 2021 17:19:34 GMT"/>
						<outline text="} "/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="docservertomarkdown.js" created="Sat, 11 Dec 2021 22:40:18 GMT">
				<outline text="const myVersion = &quot;0.4.2&quot;, myProductName = &quot;docservertomarkdown&quot;;" created="Mon, 03 Feb 2014 03:21:03 GMT" pgfnum="36831"/>
				<outline text="" created="Sat, 01 Jan 2022 16:53:14 GMT"/>
				<outline text="var urlDocsOpml = &quot;http://drummer.scripting.com/davewiner/verbDocs.opml&quot;;" created="Sun, 28 Feb 2021 16:17:50 GMT"/>
				<outline text="" created="Sat, 11 Dec 2021 22:40:21 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const utils = require (&quot;daveutils&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const request = require (&quot;request&quot;); "/>
				<outline text="const opml = require (&quot;opml&quot;); "/>
				<outline text="const davegithub = require (&quot;davegithub&quot;); "/>
				<outline text="" created="Thu, 16 Dec 2021 00:05:15 GMT"/>
				<outline text="var config = {" created="Sun, 02 Jan 2022 17:11:35 GMT">
					<outline text="flUploadToGithub: false," created="Wed, 05 Jan 2022 15:10:36 GMT"/>
					<outline text="flGenerateLocalFiles: true," created="Wed, 05 Jan 2022 15:10:44 GMT"/>
					<outline text="" created="Wed, 05 Jan 2022 15:10:52 GMT"/>
					<outline text="localFolder: &quot;&quot;, //set in config.json" created="Wed, 05 Jan 2022 15:10:53 GMT"/>
					<outline text="" created="Wed, 05 Jan 2022 15:10:36 GMT"/>
					<outline text="username: &quot;scripting&quot;,"/>
					<outline text="repo: &quot;docServer&quot;,"/>
					<outline text="repoPath: &quot;docs/&quot;,"/>
					<outline text="" created="Sun, 02 Jan 2022 17:24:21 GMT"/>
					<outline text="githubPassword: &quot;&quot;," created="Sun, 02 Jan 2022 17:24:22 GMT"/>
					<outline text="" created="Sun, 02 Jan 2022 17:31:03 GMT"/>
					<outline text="baseRepoUrl: &quot;https://github.com/scripting/docServer/blob/main/docs/&quot;," created="Sun, 02 Jan 2022 17:31:03 GMT"/>
					<outline text=""/>
					<outline text="&quot;committer&quot;: {">
						<outline text="&quot;name&quot;: &quot;Dave Winer&quot;,"/>
						<outline text="&quot;email&quot;: &quot;dave@scripting.com&quot;"/>
						<outline text="},"/>
						</outline>
					<outline text="&quot;message&quot;: &quot;.&quot;,"/>
					<outline text="" created="Sun, 02 Jan 2022 17:23:39 GMT"/>
					<outline text="&quot;userAgent&quot;: &quot;docservertomarkdown&quot;"/>
					<outline text="};" created="Sun, 02 Jan 2022 17:11:38 GMT"/>
					</outline>
				<outline text="" created="Mon, 03 Jan 2022 15:18:55 GMT"/>
				<outline text="function httpRequest (url, callback) {">
					<outline text="request (url, function (err, response, data) {">
						<outline text="if (err) {" created="Sun, 08 Aug 2021 15:33:13 GMT">
							<outline text="callback (err);" created="Sun, 08 Aug 2021 15:33:17 GMT"/>
							<outline text="}" created="Sun, 08 Aug 2021 15:33:20 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 08 Aug 2021 15:33:21 GMT">
							<outline text="if (response.statusCode != 200) {" created="Sun, 08 Aug 2021 15:33:23 GMT">
								<outline text="const message = &quot;The request returned a status code of &quot; + response.statusCode + &quot;.&quot;;" created="Sun, 08 Aug 2021 15:34:06 GMT"/>
								<outline text="callback ({message});" created="Sun, 08 Aug 2021 15:34:43 GMT"/>
								<outline text="}" created="Sun, 08 Aug 2021 15:33:28 GMT"/>
								</outline>
							<outline text="else {" created="Sun, 08 Aug 2021 15:33:29 GMT">
								<outline text="callback (undefined, data) "/>
								<outline text="}" created="Sun, 08 Aug 2021 15:33:31 GMT"/>
								</outline>
							<outline text="}" created="Sun, 08 Aug 2021 15:33:33 GMT"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function uploadToGithub (relpath, data, type, callback) {">
					<outline text="if (config.flUploadToGithub) {" created="Wed, 05 Jan 2022 15:13:21 GMT">
						<outline text="const options = {">
							<outline text="username: config.username,"/>
							<outline text="repo: config.repo,"/>
							<outline text="repoPath: config.repoPath + relpath,"/>
							<outline text="password: config.githubPassword,"/>
							<outline text="data: data,"/>
							<outline text="type: (type === undefined) ? &quot;text/plain&quot; : type,"/>
							<outline text="committer: config.committer,"/>
							<outline text="message: config.message,"/>
							<outline text="userAgent: config.userAgent"/>
							<outline text="};"/>
							</outline>
						<outline text="console.log (&quot;uploadToGithub: options ==  &quot; + utils.jsonStringify (options));" isComment="true" created="Fri, 04 Jun 2021 19:48:03 GMT"/>
						<outline text="davegithub.uploadFile (options, function (err, response, body) {">
							<outline text="console.log (&quot;uploadToGithub: url == &quot; + config.baseRepoUrl + relpath + &quot;, status == &quot; + response.statusCode); "/>
							<outline text="if (err) {" created="Fri, 04 Jun 2021 19:42:51 GMT">
								<outline text="console.log (&quot;uploadToGithub: err.message == &quot; + err.message);" created="Fri, 04 Jun 2021 19:42:55 GMT"/>
								<outline text="}" created="Fri, 04 Jun 2021 19:43:04 GMT"/>
								</outline>
							<outline text="//stats" isComment="true">
								<outline text="var now = new Date ();"/>
								<outline text="stats.ctUploads++;"/>
								<outline text="stats.whenLastUpload = now;"/>
								<outline text="if (err) {">
									<outline text="stats.ctUploadErrors++;"/>
									<outline text="stats.ctConsecutiveUploadErrors++;"/>
									<outline text="stats.whenLastUploadError = now;"/>
									<outline text="}"/>
									</outline>
								<outline text="else {">
									<outline text="stats.ctConsecutiveUploadErrors = 0;"/>
									<outline text="}"/>
									</outline>
								<outline text="statsChanged ();"/>
								</outline>
							<outline text="if (callback !== undefined) {">
								<outline text="callback ();"/>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="}" created="Wed, 05 Jan 2022 15:13:24 GMT"/>
						</outline>
					<outline text="else {" created="Wed, 05 Jan 2022 15:13:33 GMT">
						<outline text="callback ();" created="Wed, 05 Jan 2022 15:13:36 GMT"/>
						<outline text="}" created="Wed, 05 Jan 2022 15:13:39 GMT"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function writeLocalFile (relpath, data, callback) {" created="Wed, 05 Jan 2022 15:14:14 GMT">
					<outline text="if (config.flGenerateLocalFiles) {" created="Wed, 05 Jan 2022 15:14:44 GMT">
						<outline text="var f = config.localFolder + relpath;" created="Wed, 05 Jan 2022 15:15:07 GMT"/>
						<outline text="utils.sureFilePath (f, function () {" created="Wed, 05 Jan 2022 15:15:18 GMT">
							<outline text="fs.writeFile (f, data, function (err) {" created="Wed, 05 Jan 2022 15:15:00 GMT">
								<outline text="console.log (&quot;writeToLocalFile: f == &quot; + f); "/>
								<outline text="if (err) {" created="Mon, 03 Jan 2022 16:41:37 GMT">
									<outline text="console.log (&quot;writeToLocalFile: err.message == &quot; + err.message);" created="Mon, 03 Jan 2022 16:41:42 GMT"/>
									<outline text="}" created="Mon, 03 Jan 2022 16:41:53 GMT"/>
									</outline>
								<outline text="if (callback !== undefined) {" created="Wed, 05 Jan 2022 15:16:57 GMT">
									<outline text="callback ();" created="Wed, 05 Jan 2022 15:14:51 GMT"/>
									<outline text="}" created="Wed, 05 Jan 2022 15:17:04 GMT"/>
									</outline>
								<outline text="});" created="Wed, 05 Jan 2022 15:15:40 GMT"/>
								</outline>
							<outline text="});" created="Wed, 05 Jan 2022 15:15:27 GMT"/>
							</outline>
						<outline text="}" created="Wed, 05 Jan 2022 15:14:48 GMT"/>
						</outline>
					<outline text="else {" created="Wed, 05 Jan 2022 15:14:49 GMT">
						<outline text="if (callback !== undefined) {" created="Wed, 05 Jan 2022 15:16:57 GMT">
							<outline text="callback ();" created="Wed, 05 Jan 2022 15:14:51 GMT"/>
							<outline text="}" created="Wed, 05 Jan 2022 15:17:04 GMT"/>
							</outline>
						<outline text="}" created="Wed, 05 Jan 2022 15:14:54 GMT"/>
						</outline>
					<outline text="}" created="Wed, 05 Jan 2022 15:14:33 GMT"/>
					</outline>
				<outline text="function getCategoryFilename (theCategory) {" created="Mon, 03 Jan 2022 17:08:35 GMT">
					<outline text="return (utils.stringNthField (theCategory.text, &quot; &quot;, 1) + &quot;.md&quot;);" created="Mon, 03 Jan 2022 17:10:03 GMT"/>
					<outline text="}" created="Mon, 03 Jan 2022 17:08:51 GMT"/>
					</outline>
				<outline text="function uploadOneCategory (theCategory, callback) {" created="Mon, 03 Jan 2022 15:18:56 GMT">
					<outline text="var mdtext = &quot;&quot;, indentlevel = 0;"/>
					<outline text="function add (s) {">
						<outline text="mdtext += s + &quot;\n&quot;;"/>
						<outline text="console.log (s);" isComment="true"/>
						<outline text="}"/>
						</outline>
					<outline text="function exampleResultToMarkdown (theExampleResult) {" created="Tue, 16 Nov 2021 16:33:26 GMT">
						<outline text="Changes" isComment="true" created="Sat, 30 Oct 2021 17:18:38 GMT">
							<outline text="11/26/21; 9:48:58 AM by DW" created="Fri, 26 Nov 2021 14:48:57 GMT">
								<outline text="Cribbed from Old School." created="Fri, 26 Nov 2021 14:48:58 GMT"/>
								</outline>
							<outline text="11/23/21; 9:45:04 AM by DW" created="Fri, 26 Nov 2021 14:45:03 GMT">
								<outline text="Implement flSinglespaceMarkdown attribute, otherwise we double-space. " created="Fri, 26 Nov 2021 14:45:04 GMT">
									<outline text="http://scripting.com/drummer/blog/2021/11/23/192342.html?title=nextIterationOnMarkdowninanoutline" created="Fri, 26 Nov 2021 14:46:48 GMT"/>
									</outline>
								</outline>
							<outline text="11/21/21; 9:35:21 AM by DW" created="Sun, 21 Nov 2021 14:35:21 GMT">
								<outline text="Enclose in divMarkdownText, because it's a div not a span." created="Sun, 21 Nov 2021 14:35:21 GMT"/>
								</outline>
							<outline text="11/19/21; 2:07:52 PM by DW" created="Fri, 19 Nov 2021 19:07:52 GMT">
								<outline text="No more indentation, and only output one newline per headline." created="Fri, 19 Nov 2021 19:07:52 GMT"/>
								</outline>
							<outline text="10/30/21; 1:04:46 PM by DW" isComment="true" created="Sat, 30 Oct 2021 17:04:45 GMT">
								<outline text="Use spaces to indent in markdown, not tabs. " created="Sat, 30 Oct 2021 17:04:46 GMT"/>
								</outline>
							</outline>
						<outline text="let mdtext = &quot;&quot;, indentlevel = 0;"/>
						<outline text="function add (s) {">
							<outline text="mdtext += utils.filledString (&quot;    &quot;, indentlevel) + s +&quot;\n&quot;;"/>
							<outline text="mdtext += utils.filledString (&quot;    &quot;, indentlevel) + &quot; * &quot; + s +&quot;\n&quot;;" isComment="true"/>
							<outline text="}"/>
							</outline>
						<outline text="function addNode (theNode, flSinglespace=false) {" created="Fri, 29 Oct 2021 15:26:16 GMT">
							<outline text="add (theNode.text);" created="Mon, 03 Jan 2022 16:19:56 GMT"/>
							<outline text="if (theNode.subs !== undefined) {" created="Mon, 03 Jan 2022 16:21:27 GMT">
								<outline text="for (var i = 0; i &lt; theNode.subs.length; i++) {" created="Mon, 03 Jan 2022 16:21:35 GMT">
									<outline text="indentlevel++;" created="Mon, 03 Jan 2022 16:22:16 GMT"/>
									<outline text="addNode (theNode.subs [i]);" created="Mon, 03 Jan 2022 16:22:06 GMT"/>
									<outline text="indentlevel--;" created="Mon, 03 Jan 2022 16:22:16 GMT"/>
									<outline text="}" created="Mon, 03 Jan 2022 16:21:55 GMT"/>
									</outline>
								<outline text="}" created="Mon, 03 Jan 2022 16:21:34 GMT"/>
								</outline>
							<outline text="}" created="Fri, 29 Oct 2021 15:26:29 GMT"/>
							</outline>
						<outline text="addNode (theExampleResult);" created="Fri, 29 Oct 2021 15:26:30 GMT"/>
						<outline text="return (mdtext);"/>
						<outline text="}" created="Tue, 16 Nov 2021 16:33:32 GMT"/>
						</outline>
					<outline text="opml.expandInclude (theCategory, function (err, cat) {" created="Mon, 03 Jan 2022 16:40:17 GMT">
						<outline text="if (err) {" created="Mon, 03 Jan 2022 16:41:37 GMT">
							<outline text="console.log (&quot;uploadOneCategory: err.message == &quot; + err.message);" created="Mon, 03 Jan 2022 16:41:42 GMT"/>
							<outline text="}" created="Mon, 03 Jan 2022 16:41:53 GMT"/>
							</outline>
						<outline text="else {" created="Mon, 03 Jan 2022 16:41:54 GMT">
							<outline text="if (cat.subs !== undefined) {">
								<outline text="add (&quot;&quot;);"/>
								<outline text="add (&quot;# &quot; + theCategory.text);"/>
								<outline text="for (var j = 0; j &lt; cat.subs.length; j++) {">
									<outline text="var verb = cat.subs [j];"/>
									<outline text="add (&quot;## &quot; + verb.text);"/>
									<outline text="for (var k = 0; k &lt; verb.subs.length; k++) {">
										<outline text="var subtopic = verb.subs [k];"/>
										<outline text="var flCodeSubs = (subtopic.text == &quot;Example&quot;) || (subtopic.text == &quot;Examples&quot;);" created="Mon, 03 Jan 2022 15:43:55 GMT"/>
										<outline text="add (&quot;#### &quot; + subtopic.text);"/>
										<outline text="for (var m = 0; m &lt; subtopic.subs.length; m++) {">
											<outline text="var line = subtopic.subs [m], linetext = line.text;"/>
											<outline text="if (flCodeSubs) {" created="Mon, 03 Jan 2022 15:45:35 GMT">
												<outline text="linetext = &quot;`&quot; + linetext + &quot;`&quot;;" created="Mon, 03 Jan 2022 15:45:42 GMT"/>
												<outline text="}" created="Mon, 03 Jan 2022 15:45:38 GMT"/>
												</outline>
											<outline text="add (linetext + &quot;\n&quot;);"/>
											<outline text="if (line.subs !== undefined) {">
												<outline text="for (var n = 0; n &lt; line.subs.length; n++) {">
													<outline text="var exampleresult = line.subs [n];"/>
													<outline text="if (exampleresult.subs === undefined) { //the usual case, a one-line value was returned" created="Mon, 03 Jan 2022 16:11:29 GMT">
														<outline text="add (&quot;- *&quot; + exampleresult.text + &quot;*\n&quot;);"/>
														<outline text="}" created="Mon, 03 Jan 2022 16:12:09 GMT"/>
														</outline>
													<outline text="else {" created="Mon, 03 Jan 2022 16:12:10 GMT">
														<outline text="add (&quot;&lt;pre&gt;&quot; + exampleResultToMarkdown (exampleresult) + &quot;&lt;/pre&gt;&quot;);" created="Mon, 03 Jan 2022 16:12:40 GMT"/>
														<outline text="}" created="Mon, 03 Jan 2022 16:12:13 GMT"/>
														</outline>
													<outline text="}"/>
													</outline>
												<outline text="}"/>
												</outline>
											<outline text="}"/>
											</outline>
										<outline text="}"/>
										</outline>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="" created="Mon, 03 Jan 2022 15:20:45 GMT"/>
							<outline text="var path = &quot;pages/&quot; + getCategoryFilename (theCategory);" created="Mon, 03 Jan 2022 15:20:46 GMT"/>
							<outline text="uploadToGithub (path, mdtext, undefined, function () {" created="Mon, 03 Jan 2022 15:20:46 GMT">
								<outline text="writeLocalFile (path, mdtext, function () {" created="Wed, 05 Jan 2022 15:16:36 GMT">
									<outline text="callback ();" created="Mon, 03 Jan 2022 15:29:14 GMT"/>
									<outline text="});" created="Wed, 05 Jan 2022 15:16:46 GMT"/>
									</outline>
								<outline text="});" created="Mon, 03 Jan 2022 15:29:07 GMT"/>
								</outline>
							<outline text="}" created="Mon, 03 Jan 2022 16:41:56 GMT"/>
							</outline>
						<outline text="});" created="Mon, 03 Jan 2022 16:41:13 GMT"/>
						</outline>
					<outline text="}" created="Mon, 03 Jan 2022 15:19:09 GMT"/>
					</outline>
				<outline text="function uploadAllCategories (theOutline, callback) {" created="Mon, 03 Jan 2022 15:18:56 GMT">
					<outline text="var theCats = theOutline.opml.body.subs;"/>
					<outline text="function doNext (ix) {" created="Mon, 03 Jan 2022 15:29:35 GMT">
						<outline text="if (ix &lt; theCats.length) {" created="Mon, 03 Jan 2022 15:29:55 GMT">
							<outline text="uploadOneCategory (theCats [ix], function () {" created="Mon, 03 Jan 2022 15:30:23 GMT">
								<outline text="doNext (ix + 1);" created="Mon, 03 Jan 2022 15:30:48 GMT"/>
								<outline text="});" created="Mon, 03 Jan 2022 15:30:55 GMT"/>
								</outline>
							<outline text="}" created="Mon, 03 Jan 2022 15:30:05 GMT"/>
							</outline>
						<outline text="else {" created="Mon, 03 Jan 2022 15:30:05 GMT">
							<outline text="callback ();" created="Mon, 03 Jan 2022 15:31:01 GMT"/>
							<outline text="}" created="Mon, 03 Jan 2022 15:30:07 GMT"/>
							</outline>
						<outline text="}" created="Mon, 03 Jan 2022 15:29:44 GMT"/>
						</outline>
					<outline text="doNext (0);" created="Mon, 03 Jan 2022 15:29:45 GMT"/>
					<outline text="}" created="Mon, 03 Jan 2022 15:27:09 GMT"/>
					</outline>
				<outline text="function uploadIndex (theOutline, callback) {" created="Mon, 03 Jan 2022 16:56:28 GMT">
					<outline text="Changes" isComment="true" created="Thu, 06 Jan 2022 13:48:28 GMT">
						<outline text="1/6/22; 8:48:30 AM by DW" created="Thu, 06 Jan 2022 13:48:29 GMT">
							<outline text="Handle categories which are includes. " created="Thu, 06 Jan 2022 13:48:31 GMT"/>
							</outline>
						</outline>
					<outline text="var mdtext = &quot;&quot;, indentlevel = 0;"/>
					<outline text="function add (s) {">
						<outline text="mdtext += utils.filledString (&quot;    &quot;, indentlevel) + s + &quot;\n&quot;;"/>
						<outline text="console.log (s);" isComment="true"/>
						<outline text="}"/>
						</outline>
					<outline text="var theCats = theOutline.opml.body.subs;"/>
					<outline text="add (&quot;# Complete list of verbs&quot;);" created="Mon, 03 Jan 2022 17:05:48 GMT"/>
					<outline text="" created="Thu, 06 Jan 2022 14:11:19 GMT"/>
					<outline text="function doNext (ix) {" created="Mon, 03 Jan 2022 15:29:35 GMT">
						<outline text="if (ix &lt; theCats.length) {" created="Mon, 03 Jan 2022 15:29:55 GMT">
							<outline text="var fname = getCategoryFilename (theCats [ix]);" created="Thu, 06 Jan 2022 13:56:26 GMT"/>
							<outline text="opml.expandInclude (theCats [ix], function (err, cat) {" created="Mon, 03 Jan 2022 16:40:17 GMT">
								<outline text="if (err) {" created="Mon, 03 Jan 2022 16:41:37 GMT">
									<outline text="console.log (&quot;uploadIndex: err.message == &quot; + err.message);" created="Mon, 03 Jan 2022 16:41:42 GMT"/>
									<outline text="}" created="Mon, 03 Jan 2022 16:41:53 GMT"/>
									</outline>
								<outline text="else {" created="Mon, 03 Jan 2022 16:41:54 GMT">
									<outline text="if (cat.subs !== undefined) {" created="Mon, 03 Jan 2022 16:58:23 GMT">
										<outline text="for (var j = 0; j &lt; cat.subs.length; j++) {" created="Mon, 03 Jan 2022 16:58:57 GMT">
											<outline text="var verb = cat.subs [j];" created="Mon, 03 Jan 2022 16:59:59 GMT"/>
											<outline text="var url = &quot;pages/&quot; + fname + &quot;#&quot; + utils.stringLower (verb.name);" created="Mon, 03 Jan 2022 17:07:28 GMT"/>
											<outline text="add (&quot;* [&quot; + verb.text + &quot;](&quot; + url + &quot;)&quot;);" created="Mon, 03 Jan 2022 16:59:19 GMT"/>
											<outline text="}" created="Mon, 03 Jan 2022 16:59:17 GMT"/>
											</outline>
										<outline text="}" created="Mon, 03 Jan 2022 16:58:49 GMT"/>
										</outline>
									<outline text="}" created="Mon, 03 Jan 2022 16:41:56 GMT"/>
									</outline>
								<outline text="doNext (ix + 1);" created="Mon, 03 Jan 2022 15:30:48 GMT"/>
								<outline text="});" created="Mon, 03 Jan 2022 16:41:13 GMT"/>
								</outline>
							<outline text="}" created="Mon, 03 Jan 2022 15:30:05 GMT"/>
							</outline>
						<outline text="else {" created="Mon, 03 Jan 2022 15:30:05 GMT">
							<outline text="var path = &quot;readme.md&quot;;" created="Wed, 05 Jan 2022 15:20:53 GMT"/>
							<outline text="uploadToGithub (path, mdtext, undefined, function () {" created="Mon, 03 Jan 2022 15:20:46 GMT">
								<outline text="writeLocalFile (path, mdtext, function () {" created="Wed, 05 Jan 2022 15:16:36 GMT">
									<outline text="callback ();" created="Mon, 03 Jan 2022 15:29:14 GMT"/>
									<outline text="});" created="Wed, 05 Jan 2022 15:16:46 GMT"/>
									</outline>
								<outline text="});" created="Mon, 03 Jan 2022 15:29:07 GMT"/>
								</outline>
							<outline text="}" created="Mon, 03 Jan 2022 15:30:07 GMT"/>
							</outline>
						<outline text="}" created="Mon, 03 Jan 2022 15:29:44 GMT"/>
						</outline>
					<outline text="doNext (0);" created="Thu, 06 Jan 2022 14:11:19 GMT"/>
					<outline text="" created="Thu, 06 Jan 2022 14:11:20 GMT"/>
					<outline text="for (var i = 0; i &lt; theCats.length; i++) {" isComment="true" created="Mon, 03 Jan 2022 16:57:21 GMT">
						<outline text="var fname = getCategoryFilename (theCats [i]);" created="Thu, 06 Jan 2022 13:56:26 GMT"/>
						<outline text="opml.expandInclude (theCats [i], function (err, cat) {" created="Mon, 03 Jan 2022 16:40:17 GMT">
							<outline text="if (err) {" created="Mon, 03 Jan 2022 16:41:37 GMT">
								<outline text="console.log (&quot;uploadIndex: err.message == &quot; + err.message);" created="Mon, 03 Jan 2022 16:41:42 GMT"/>
								<outline text="}" created="Mon, 03 Jan 2022 16:41:53 GMT"/>
								</outline>
							<outline text="else {" created="Mon, 03 Jan 2022 16:41:54 GMT">
								<outline text="if (cat.subs !== undefined) {" created="Mon, 03 Jan 2022 16:58:23 GMT">
									<outline text="for (var j = 0; j &lt; cat.subs.length; j++) {" created="Mon, 03 Jan 2022 16:58:57 GMT">
										<outline text="var verb = cat.subs [j];" created="Mon, 03 Jan 2022 16:59:59 GMT"/>
										<outline text="var url = &quot;pages/&quot; + fname + &quot;#&quot; + utils.stringLower (verb.name);" created="Mon, 03 Jan 2022 17:07:28 GMT"/>
										<outline text="add (&quot;* [&quot; + verb.text + &quot;](&quot; + url + &quot;)&quot;);" created="Mon, 03 Jan 2022 16:59:19 GMT"/>
										<outline text="}" created="Mon, 03 Jan 2022 16:59:17 GMT"/>
										</outline>
									<outline text="}" created="Mon, 03 Jan 2022 16:58:49 GMT"/>
									</outline>
								<outline text="}" created="Mon, 03 Jan 2022 16:41:56 GMT"/>
								</outline>
							<outline text="});" created="Mon, 03 Jan 2022 16:41:13 GMT"/>
							</outline>
						<outline text="}" created="Mon, 03 Jan 2022 16:57:37 GMT"/>
						</outline>
					<outline text="}" created="Mon, 03 Jan 2022 16:56:38 GMT"/>
					</outline>
				<outline text="function readConfig (f, theConfig, callback) { ">
					<outline text="fs.readFile (f, function (err, jsontext) {">
						<outline text="if (!err) {">
							<outline text="try {">
								<outline text="var jstruct = JSON.parse (jsontext);"/>
								<outline text="for (var x in jstruct) {">
									<outline text="theConfig [x] = jstruct [x];"/>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="catch (err) {">
								<outline text="console.log (&quot;readConfig: err.message == &quot; + err.message);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="callback ();"/>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="" created="Sun, 02 Jan 2022 17:08:08 GMT"/>
				<outline text="readConfig (&quot;config.json&quot;, config, function () {" created="Sat, 11 Dec 2021 22:41:37 GMT">
					<outline text="console.log (&quot;config == &quot; + utils.jsonStringify (config));" created="Sun, 02 Jan 2022 17:10:45 GMT"/>
					<outline text="httpRequest (urlDocsOpml, function (err, opmltext) {" created="Thu, 17 Jun 2021 19:56:51 GMT">
						<outline text="if (err) {" created="Sun, 08 Aug 2021 15:12:18 GMT">
							<outline text="console.log (err.message);" created="Sun, 08 Aug 2021 15:14:05 GMT"/>
							<outline text="}" created="Sun, 08 Aug 2021 15:14:10 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 08 Aug 2021 15:12:29 GMT">
							<outline text="opml.parse (opmltext, function (err, theOutline) {">
								<outline text="if (err) {">
									<outline text="console.log (err.message);" created="Sun, 08 Aug 2021 15:14:05 GMT"/>
									<outline text="}"/>
									</outline>
								<outline text="else {">
									<outline text="uploadAllCategories (theOutline, function () {" created="Mon, 03 Jan 2022 15:31:55 GMT">
										<outline text="uploadIndex (theOutline, function () {" created="Mon, 03 Jan 2022 17:02:53 GMT">
											<outline text="console.log (&quot;&quot;); //skip line" created="Mon, 03 Jan 2022 15:32:05 GMT"/>
											<outline text="});" created="Mon, 03 Jan 2022 17:02:59 GMT"/>
											</outline>
										<outline text="})" created="Mon, 03 Jan 2022 15:32:03 GMT"/>
										</outline>
									<outline text="}"/>
									</outline>
								<outline text="});"/>
								</outline>
							<outline text="}" created="Sun, 08 Aug 2021 15:12:31 GMT"/>
							</outline>
						<outline text="})" created="Thu, 17 Jun 2021 19:58:33 GMT"/>
						</outline>
					<outline text="});" created="Sat, 11 Dec 2021 22:42:05 GMT"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Wed, 05 Jan 2022 14:59:34 GMT">
			<outline text="nodeEditorSuite.utilities.buildDocserverToMarkdown ()" created="Wed, 10 Mar 2021 20:27:03 GMT"/>
			</outline>
		</body>
	</opml>
